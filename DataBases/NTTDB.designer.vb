'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.18444
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="NTTDB")>  _
Partial Public Class NTTDBDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertCounty(instance As County)
    End Sub
  Partial Private Sub UpdateCounty(instance As County)
    End Sub
  Partial Private Sub DeleteCounty(instance As County)
    End Sub
  Partial Private Sub InsertWStation(instance As WStation)
    End Sub
  Partial Private Sub UpdateWStation(instance As WStation)
    End Sub
  Partial Private Sub DeleteWStation(instance As WStation)
    End Sub
  Partial Private Sub InsertSSArea(instance As SSArea)
    End Sub
  Partial Private Sub UpdateSSArea(instance As SSArea)
    End Sub
  Partial Private Sub DeleteSSArea(instance As SSArea)
    End Sub
  Partial Private Sub InsertState(instance As State)
    End Sub
  Partial Private Sub UpdateState(instance As State)
    End Sub
  Partial Private Sub DeleteState(instance As State)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.System.Configuration.ConfigurationManager.ConnectionStrings("NTTDBConnectionString").ConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property APEXCROPs() As System.Data.Linq.Table(Of APEXCROP)
		Get
			Return Me.GetTable(Of APEXCROP)
		End Get
	End Property
	
	Public ReadOnly Property Operations() As System.Data.Linq.Table(Of Operation)
		Get
			Return Me.GetTable(Of Operation)
		End Get
	End Property
	
	Public ReadOnly Property weatherCoors() As System.Data.Linq.Table(Of weatherCoor)
		Get
			Return Me.GetTable(Of weatherCoor)
		End Get
	End Property
	
	Public ReadOnly Property Counties() As System.Data.Linq.Table(Of County)
		Get
			Return Me.GetTable(Of County)
		End Get
	End Property
	
	Public ReadOnly Property AnimalUnits() As System.Data.Linq.Table(Of AnimalUnit)
		Get
			Return Me.GetTable(Of AnimalUnit)
		End Get
	End Property
	
	Public ReadOnly Property WStations() As System.Data.Linq.Table(Of WStation)
		Get
			Return Me.GetTable(Of WStation)
		End Get
	End Property
	
	Public ReadOnly Property SSAreas() As System.Data.Linq.Table(Of SSArea)
		Get
			Return Me.GetTable(Of SSArea)
		End Get
	End Property
	
	Public ReadOnly Property APEXFerts() As System.Data.Linq.Table(Of APEXFert)
		Get
			Return Me.GetTable(Of APEXFert)
		End Get
	End Property
	
	Public ReadOnly Property Equipments() As System.Data.Linq.Table(Of Equipment)
		Get
			Return Me.GetTable(Of Equipment)
		End Get
	End Property
	
	Public ReadOnly Property Feeds() As System.Data.Linq.Table(Of Feed)
		Get
			Return Me.GetTable(Of Feed)
		End Get
	End Property
	
	Public ReadOnly Property Structures() As System.Data.Linq.Table(Of [Structure])
		Get
			Return Me.GetTable(Of [Structure])
		End Get
	End Property
	
	Public ReadOnly Property OtherInputs() As System.Data.Linq.Table(Of OtherInput)
		Get
			Return Me.GetTable(Of OtherInput)
		End Get
	End Property
	
	Public ReadOnly Property Crops_Events() As System.Data.Linq.Table(Of Crops_Event)
		Get
			Return Me.GetTable(Of Crops_Event)
		End Get
	End Property
	
	Public ReadOnly Property OpTypes() As System.Data.Linq.Table(Of OpType)
		Get
			Return Me.GetTable(Of OpType)
		End Get
	End Property
	
	Public ReadOnly Property EventsTypicalExtendeds() As System.Data.Linq.Table(Of EventsTypicalExtended)
		Get
			Return Me.GetTable(Of EventsTypicalExtended)
		End Get
	End Property
	
	Public ReadOnly Property CropMatrixTypicals() As System.Data.Linq.Table(Of CropMatrixTypical)
		Get
			Return Me.GetTable(Of CropMatrixTypical)
		End Get
	End Property
	
	Public ReadOnly Property States() As System.Data.Linq.Table(Of State)
		Get
			Return Me.GetTable(Of State)
		End Get
	End Property
	
	Public ReadOnly Property ParmsDescs() As System.Data.Linq.Table(Of ParmsDesc)
		Get
			Return Me.GetTable(Of ParmsDesc)
		End Get
	End Property
	
	Public ReadOnly Property ControlsDescs() As System.Data.Linq.Table(Of ControlsDesc)
		Get
			Return Me.GetTable(Of ControlsDesc)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.APEXCROPS")>  _
Partial Public Class APEXCROP
	
	Private _CropNumber As System.Nullable(Of Short)
	
	Private _DNDC_Code As System.Nullable(Of Short)
	
	Private _CropCode As String
	
	Private _CropName As String
	
	Private _PlantPopulation As System.Nullable(Of Short)
	
	Private _PlantPopulationAcres As System.Nullable(Of Decimal)
	
	Private _HeatUnits As System.Nullable(Of Integer)
	
	Private _LUNumber As System.Nullable(Of Short)
	
	Private _A As String
	
	Private _B As String
	
	Private _C As String
	
	Private _D As String
	
	Private _FilterStrip As String
	
	Private _YieldUnit As String
	
	Private _BushelWeight As System.Nullable(Of Single)
	
	Private _ConversionFactor As System.Nullable(Of Single)
	
	Private _DryMatter As System.Nullable(Of Single)
	
	Private _HarvestCode As System.Nullable(Of Short)
	
	Private _PlantingCode As System.Nullable(Of Short)
	
	Private _StateAbrev As String
	
	Private _itil As System.Nullable(Of Single)
	
	Private _to1 As System.Nullable(Of Single)
	
	Private _tb As System.Nullable(Of Single)
	
	Private _dd As System.Nullable(Of Single)
	
	Private _daym As System.Nullable(Of Single)
	
	Private _cropNameSpanish As String
	
	Private _cropNamePortuguese As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CropNumber", DbType:="SmallInt")>  _
	Public Property CropNumber() As System.Nullable(Of Short)
		Get
			Return Me._CropNumber
		End Get
		Set
			If (Me._CropNumber.Equals(value) = false) Then
				Me._CropNumber = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DNDC_Code", DbType:="SmallInt")>  _
	Public Property DNDC_Code() As System.Nullable(Of Short)
		Get
			Return Me._DNDC_Code
		End Get
		Set
			If (Me._DNDC_Code.Equals(value) = false) Then
				Me._DNDC_Code = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CropCode", DbType:="NChar(10)")>  _
	Public Property CropCode() As String
		Get
			Return Me._CropCode
		End Get
		Set
			If (String.Equals(Me._CropCode, value) = false) Then
				Me._CropCode = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CropName", DbType:="Char(30)")>  _
	Public Property CropName() As String
		Get
			Return Me._CropName
		End Get
		Set
			If (String.Equals(Me._CropName, value) = false) Then
				Me._CropName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PlantPopulation", DbType:="SmallInt")>  _
	Public Property PlantPopulation() As System.Nullable(Of Short)
		Get
			Return Me._PlantPopulation
		End Get
		Set
			If (Me._PlantPopulation.Equals(value) = false) Then
				Me._PlantPopulation = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PlantPopulationAcres", DbType:="Decimal(18,0)")>  _
	Public Property PlantPopulationAcres() As System.Nullable(Of Decimal)
		Get
			Return Me._PlantPopulationAcres
		End Get
		Set
			If (Me._PlantPopulationAcres.Equals(value) = false) Then
				Me._PlantPopulationAcres = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HeatUnits", DbType:="Int")>  _
	Public Property HeatUnits() As System.Nullable(Of Integer)
		Get
			Return Me._HeatUnits
		End Get
		Set
			If (Me._HeatUnits.Equals(value) = false) Then
				Me._HeatUnits = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LUNumber", DbType:="SmallInt")>  _
	Public Property LUNumber() As System.Nullable(Of Short)
		Get
			Return Me._LUNumber
		End Get
		Set
			If (Me._LUNumber.Equals(value) = false) Then
				Me._LUNumber = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A", DbType:="NChar(2)")>  _
	Public Property A() As String
		Get
			Return Me._A
		End Get
		Set
			If (String.Equals(Me._A, value) = false) Then
				Me._A = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_B", DbType:="NChar(2)")>  _
	Public Property B() As String
		Get
			Return Me._B
		End Get
		Set
			If (String.Equals(Me._B, value) = false) Then
				Me._B = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C", DbType:="NChar(2)")>  _
	Public Property C() As String
		Get
			Return Me._C
		End Get
		Set
			If (String.Equals(Me._C, value) = false) Then
				Me._C = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_D", DbType:="NChar(2)")>  _
	Public Property D() As String
		Get
			Return Me._D
		End Get
		Set
			If (String.Equals(Me._D, value) = false) Then
				Me._D = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FilterStrip", DbType:="NChar(4)")>  _
	Public Property FilterStrip() As String
		Get
			Return Me._FilterStrip
		End Get
		Set
			If (String.Equals(Me._FilterStrip, value) = false) Then
				Me._FilterStrip = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_YieldUnit", DbType:="NChar(10)")>  _
	Public Property YieldUnit() As String
		Get
			Return Me._YieldUnit
		End Get
		Set
			If (String.Equals(Me._YieldUnit, value) = false) Then
				Me._YieldUnit = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BushelWeight", DbType:="Real")>  _
	Public Property BushelWeight() As System.Nullable(Of Single)
		Get
			Return Me._BushelWeight
		End Get
		Set
			If (Me._BushelWeight.Equals(value) = false) Then
				Me._BushelWeight = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ConversionFactor", DbType:="Real")>  _
	Public Property ConversionFactor() As System.Nullable(Of Single)
		Get
			Return Me._ConversionFactor
		End Get
		Set
			If (Me._ConversionFactor.Equals(value) = false) Then
				Me._ConversionFactor = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DryMatter", DbType:="Real")>  _
	Public Property DryMatter() As System.Nullable(Of Single)
		Get
			Return Me._DryMatter
		End Get
		Set
			If (Me._DryMatter.Equals(value) = false) Then
				Me._DryMatter = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HarvestCode", DbType:="SmallInt")>  _
	Public Property HarvestCode() As System.Nullable(Of Short)
		Get
			Return Me._HarvestCode
		End Get
		Set
			If (Me._HarvestCode.Equals(value) = false) Then
				Me._HarvestCode = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PlantingCode", DbType:="SmallInt")>  _
	Public Property PlantingCode() As System.Nullable(Of Short)
		Get
			Return Me._PlantingCode
		End Get
		Set
			If (Me._PlantingCode.Equals(value) = false) Then
				Me._PlantingCode = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StateAbrev", DbType:="NChar(2)")>  _
	Public Property StateAbrev() As String
		Get
			Return Me._StateAbrev
		End Get
		Set
			If (String.Equals(Me._StateAbrev, value) = false) Then
				Me._StateAbrev = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_itil", DbType:="Real")>  _
	Public Property itil() As System.Nullable(Of Single)
		Get
			Return Me._itil
		End Get
		Set
			If (Me._itil.Equals(value) = false) Then
				Me._itil = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_to1", DbType:="Real")>  _
	Public Property to1() As System.Nullable(Of Single)
		Get
			Return Me._to1
		End Get
		Set
			If (Me._to1.Equals(value) = false) Then
				Me._to1 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tb", DbType:="Real")>  _
	Public Property tb() As System.Nullable(Of Single)
		Get
			Return Me._tb
		End Get
		Set
			If (Me._tb.Equals(value) = false) Then
				Me._tb = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dd", DbType:="Real")>  _
	Public Property dd() As System.Nullable(Of Single)
		Get
			Return Me._dd
		End Get
		Set
			If (Me._dd.Equals(value) = false) Then
				Me._dd = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_daym", DbType:="Real")>  _
	Public Property daym() As System.Nullable(Of Single)
		Get
			Return Me._daym
		End Get
		Set
			If (Me._daym.Equals(value) = false) Then
				Me._daym = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cropNameSpanish", DbType:="Char(30)")>  _
	Public Property cropNameSpanish() As String
		Get
			Return Me._cropNameSpanish
		End Get
		Set
			If (String.Equals(Me._cropNameSpanish, value) = false) Then
				Me._cropNameSpanish = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cropNamePortuguese", DbType:="NChar(30)")>  _
	Public Property cropNamePortuguese() As String
		Get
			Return Me._cropNamePortuguese
		End Get
		Set
			If (String.Equals(Me._cropNamePortuguese, value) = false) Then
				Me._cropNamePortuguese = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Operations")>  _
Partial Public Class Operation
	
	Private _Name As String
	
	Private _Code As System.Nullable(Of Short)
	
	Private _Abbreviation As String
	
	Private _NameSpanish As String
	
	Private _NamePortuguese As String
	
	Private _ApexCode As System.Nullable(Of Short)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name", DbType:="NChar(20)")>  _
	Public Property Name() As String
		Get
			Return Me._Name
		End Get
		Set
			If (String.Equals(Me._Name, value) = false) Then
				Me._Name = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Code", DbType:="SmallInt")>  _
	Public Property Code() As System.Nullable(Of Short)
		Get
			Return Me._Code
		End Get
		Set
			If (Me._Code.Equals(value) = false) Then
				Me._Code = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Abbreviation", DbType:="NChar(5)")>  _
	Public Property Abbreviation() As String
		Get
			Return Me._Abbreviation
		End Get
		Set
			If (String.Equals(Me._Abbreviation, value) = false) Then
				Me._Abbreviation = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NameSpanish", DbType:="NChar(20)")>  _
	Public Property NameSpanish() As String
		Get
			Return Me._NameSpanish
		End Get
		Set
			If (String.Equals(Me._NameSpanish, value) = false) Then
				Me._NameSpanish = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NamePortuguese", DbType:="NChar(20)")>  _
	Public Property NamePortuguese() As String
		Get
			Return Me._NamePortuguese
		End Get
		Set
			If (String.Equals(Me._NamePortuguese, value) = false) Then
				Me._NamePortuguese = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ApexCode", DbType:="SmallInt")>  _
	Public Property ApexCode() As System.Nullable(Of Short)
		Get
			Return Me._ApexCode
		End Get
		Set
			If (Me._ApexCode.Equals(value) = false) Then
				Me._ApexCode = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.weatherCoor")>  _
Partial Public Class weatherCoor
	
	Private _Lat As System.Nullable(Of Single)
	
	Private _Lon As System.Nullable(Of Single)
	
	Private _FileName As String
	
	Private _initialYear As System.Nullable(Of Short)
	
	Private _finalYear As System.Nullable(Of Short)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Lat", DbType:="Real")>  _
	Public Property Lat() As System.Nullable(Of Single)
		Get
			Return Me._Lat
		End Get
		Set
			If (Me._Lat.Equals(value) = false) Then
				Me._Lat = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Lon", DbType:="Real")>  _
	Public Property Lon() As System.Nullable(Of Single)
		Get
			Return Me._Lon
		End Get
		Set
			If (Me._Lon.Equals(value) = false) Then
				Me._Lon = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FileName", DbType:="NVarChar(50)")>  _
	Public Property FileName() As String
		Get
			Return Me._FileName
		End Get
		Set
			If (String.Equals(Me._FileName, value) = false) Then
				Me._FileName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_initialYear", DbType:="SmallInt")>  _
	Public Property initialYear() As System.Nullable(Of Short)
		Get
			Return Me._initialYear
		End Get
		Set
			If (Me._initialYear.Equals(value) = false) Then
				Me._initialYear = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_finalYear", DbType:="SmallInt")>  _
	Public Property finalYear() As System.Nullable(Of Short)
		Get
			Return Me._finalYear
		End Get
		Set
			If (Me._finalYear.Equals(value) = false) Then
				Me._finalYear = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.County")>  _
Partial Public Class County
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _CountyID As Integer
	
	Private _Code As String
	
	Private _Name As String
	
	Private _StateAbrev As String
	
	Private _DStatus As Integer
	
	Private _DStatusSL As System.Nullable(Of Integer)
	
	Private _Lat As System.Nullable(Of Single)
	
	Private _Long As System.Nullable(Of Single)
	
	Private _SysTime As System.Data.Linq.Binary
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCountyIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnCountyIDChanged()
    End Sub
    Partial Private Sub OnCodeChanging(value As String)
    End Sub
    Partial Private Sub OnCodeChanged()
    End Sub
    Partial Private Sub OnNameChanging(value As String)
    End Sub
    Partial Private Sub OnNameChanged()
    End Sub
    Partial Private Sub OnStateAbrevChanging(value As String)
    End Sub
    Partial Private Sub OnStateAbrevChanged()
    End Sub
    Partial Private Sub OnDStatusChanging(value As Integer)
    End Sub
    Partial Private Sub OnDStatusChanged()
    End Sub
    Partial Private Sub OnDStatusSLChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDStatusSLChanged()
    End Sub
    Partial Private Sub OnLatChanging(value As System.Nullable(Of Single))
    End Sub
    Partial Private Sub OnLatChanged()
    End Sub
    Partial Private Sub OnLongChanging(value As System.Nullable(Of Single))
    End Sub
    Partial Private Sub OnLongChanged()
    End Sub
    Partial Private Sub OnSysTimeChanging(value As System.Data.Linq.Binary)
    End Sub
    Partial Private Sub OnSysTimeChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CountyID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property CountyID() As Integer
		Get
			Return Me._CountyID
		End Get
		Set
			If ((Me._CountyID = value)  _
						= false) Then
				Me.OnCountyIDChanging(value)
				Me.SendPropertyChanging
				Me._CountyID = value
				Me.SendPropertyChanged("CountyID")
				Me.OnCountyIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Code", DbType:="NChar(5) NOT NULL", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Code() As String
		Get
			Return Me._Code
		End Get
		Set
			If (String.Equals(Me._Code, value) = false) Then
				Me.OnCodeChanging(value)
				Me.SendPropertyChanging
				Me._Code = value
				Me.SendPropertyChanged("Code")
				Me.OnCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name", DbType:="NChar(100) NOT NULL", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Name() As String
		Get
			Return Me._Name
		End Get
		Set
			If (String.Equals(Me._Name, value) = false) Then
				Me.OnNameChanging(value)
				Me.SendPropertyChanging
				Me._Name = value
				Me.SendPropertyChanged("Name")
				Me.OnNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StateAbrev", DbType:="NChar(2) NOT NULL", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property StateAbrev() As String
		Get
			Return Me._StateAbrev
		End Get
		Set
			If (String.Equals(Me._StateAbrev, value) = false) Then
				Me.OnStateAbrevChanging(value)
				Me.SendPropertyChanging
				Me._StateAbrev = value
				Me.SendPropertyChanged("StateAbrev")
				Me.OnStateAbrevChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DStatus", DbType:="Int NOT NULL", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property DStatus() As Integer
		Get
			Return Me._DStatus
		End Get
		Set
			If ((Me._DStatus = value)  _
						= false) Then
				Me.OnDStatusChanging(value)
				Me.SendPropertyChanging
				Me._DStatus = value
				Me.SendPropertyChanged("DStatus")
				Me.OnDStatusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DStatusSL", DbType:="Int", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property DStatusSL() As System.Nullable(Of Integer)
		Get
			Return Me._DStatusSL
		End Get
		Set
			If (Me._DStatusSL.Equals(value) = false) Then
				Me.OnDStatusSLChanging(value)
				Me.SendPropertyChanging
				Me._DStatusSL = value
				Me.SendPropertyChanged("DStatusSL")
				Me.OnDStatusSLChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Lat", DbType:="Real", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Lat() As System.Nullable(Of Single)
		Get
			Return Me._Lat
		End Get
		Set
			If (Me._Lat.Equals(value) = false) Then
				Me.OnLatChanging(value)
				Me.SendPropertyChanging
				Me._Lat = value
				Me.SendPropertyChanged("Lat")
				Me.OnLatChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="Long", Storage:="_Long", DbType:="Real", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property [Long]() As System.Nullable(Of Single)
		Get
			Return Me._Long
		End Get
		Set
			If (Me._Long.Equals(value) = false) Then
				Me.OnLongChanging(value)
				Me.SendPropertyChanging
				Me._Long = value
				Me.SendPropertyChanged("[Long]")
				Me.OnLongChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SysTime", AutoSync:=AutoSync.Always, DbType:="rowversion", IsDbGenerated:=true, IsVersion:=true, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property SysTime() As System.Data.Linq.Binary
		Get
			Return Me._SysTime
		End Get
		Set
			If (Object.Equals(Me._SysTime, value) = false) Then
				Me.OnSysTimeChanging(value)
				Me.SendPropertyChanging
				Me._SysTime = value
				Me.SendPropertyChanged("SysTime")
				Me.OnSysTimeChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.AnimalUnit")>  _
Partial Public Class AnimalUnit
	
	Private _AnimalCode As Short
	
	Private _AnimalType As String
	
	Private _ConversionUnit As Single
	
	Private _Status As System.Nullable(Of Boolean)
	
	Private _DryManure As System.Nullable(Of Decimal)
	
	Private _NO3N As System.Nullable(Of Decimal)
	
	Private _PO4P As System.Nullable(Of Decimal)
	
	Private _OrgN As System.Nullable(Of Decimal)
	
	Private _OrgP As System.Nullable(Of Decimal)
	
	Private _AnimalSpanish As String
	
	Private _AnimalPortuguese As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AnimalCode", DbType:="SmallInt NOT NULL")>  _
	Public Property AnimalCode() As Short
		Get
			Return Me._AnimalCode
		End Get
		Set
			If ((Me._AnimalCode = value)  _
						= false) Then
				Me._AnimalCode = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AnimalType", DbType:="NChar(30) NOT NULL", CanBeNull:=false)>  _
	Public Property AnimalType() As String
		Get
			Return Me._AnimalType
		End Get
		Set
			If (String.Equals(Me._AnimalType, value) = false) Then
				Me._AnimalType = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ConversionUnit", DbType:="Real NOT NULL")>  _
	Public Property ConversionUnit() As Single
		Get
			Return Me._ConversionUnit
		End Get
		Set
			If ((Me._ConversionUnit = value)  _
						= false) Then
				Me._ConversionUnit = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Status", DbType:="Bit")>  _
	Public Property Status() As System.Nullable(Of Boolean)
		Get
			Return Me._Status
		End Get
		Set
			If (Me._Status.Equals(value) = false) Then
				Me._Status = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DryManure", DbType:="Decimal(5,2)")>  _
	Public Property DryManure() As System.Nullable(Of Decimal)
		Get
			Return Me._DryManure
		End Get
		Set
			If (Me._DryManure.Equals(value) = false) Then
				Me._DryManure = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NO3N", DbType:="Decimal(7,4)")>  _
	Public Property NO3N() As System.Nullable(Of Decimal)
		Get
			Return Me._NO3N
		End Get
		Set
			If (Me._NO3N.Equals(value) = false) Then
				Me._NO3N = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PO4P", DbType:="Decimal(7,4)")>  _
	Public Property PO4P() As System.Nullable(Of Decimal)
		Get
			Return Me._PO4P
		End Get
		Set
			If (Me._PO4P.Equals(value) = false) Then
				Me._PO4P = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OrgN", DbType:="Decimal(7,4)")>  _
	Public Property OrgN() As System.Nullable(Of Decimal)
		Get
			Return Me._OrgN
		End Get
		Set
			If (Me._OrgN.Equals(value) = false) Then
				Me._OrgN = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OrgP", DbType:="Decimal(7,4)")>  _
	Public Property OrgP() As System.Nullable(Of Decimal)
		Get
			Return Me._OrgP
		End Get
		Set
			If (Me._OrgP.Equals(value) = false) Then
				Me._OrgP = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AnimalSpanish", DbType:="NChar(30)")>  _
	Public Property AnimalSpanish() As String
		Get
			Return Me._AnimalSpanish
		End Get
		Set
			If (String.Equals(Me._AnimalSpanish, value) = false) Then
				Me._AnimalSpanish = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AnimalPortuguese", DbType:="NChar(30)")>  _
	Public Property AnimalPortuguese() As String
		Get
			Return Me._AnimalPortuguese
		End Get
		Set
			If (String.Equals(Me._AnimalPortuguese, value) = false) Then
				Me._AnimalPortuguese = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.WStation")>  _
Partial Public Class WStation
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _WStationID As Integer
	
	Private _Code As String
	
	Private _WSType As String
	
	Private _Name As String
	
	Private _CountyCode As String
	
	Private _StateAbrev As String
	
	Private _DStatus As System.Nullable(Of Integer)
	
	Private _SysTime As System.Data.Linq.Binary
	
	Private _windName As String
	
	Private _wp1Name As String
	
	Private _initialYear As System.Nullable(Of Short)
	
	Private _finalYear As System.Nullable(Of Short)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnWStationIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnWStationIDChanged()
    End Sub
    Partial Private Sub OnCodeChanging(value As String)
    End Sub
    Partial Private Sub OnCodeChanged()
    End Sub
    Partial Private Sub OnWSTypeChanging(value As String)
    End Sub
    Partial Private Sub OnWSTypeChanged()
    End Sub
    Partial Private Sub OnNameChanging(value As String)
    End Sub
    Partial Private Sub OnNameChanged()
    End Sub
    Partial Private Sub OnCountyCodeChanging(value As String)
    End Sub
    Partial Private Sub OnCountyCodeChanged()
    End Sub
    Partial Private Sub OnStateAbrevChanging(value As String)
    End Sub
    Partial Private Sub OnStateAbrevChanged()
    End Sub
    Partial Private Sub OnDStatusChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDStatusChanged()
    End Sub
    Partial Private Sub OnSysTimeChanging(value As System.Data.Linq.Binary)
    End Sub
    Partial Private Sub OnSysTimeChanged()
    End Sub
    Partial Private Sub OnwindNameChanging(value As String)
    End Sub
    Partial Private Sub OnwindNameChanged()
    End Sub
    Partial Private Sub Onwp1NameChanging(value As String)
    End Sub
    Partial Private Sub Onwp1NameChanged()
    End Sub
    Partial Private Sub OninitialYearChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OninitialYearChanged()
    End Sub
    Partial Private Sub OnfinalYearChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnfinalYearChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WStationID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property WStationID() As Integer
		Get
			Return Me._WStationID
		End Get
		Set
			If ((Me._WStationID = value)  _
						= false) Then
				Me.OnWStationIDChanging(value)
				Me.SendPropertyChanging
				Me._WStationID = value
				Me.SendPropertyChanged("WStationID")
				Me.OnWStationIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Code", DbType:="NChar(30) NOT NULL", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Code() As String
		Get
			Return Me._Code
		End Get
		Set
			If (String.Equals(Me._Code, value) = false) Then
				Me.OnCodeChanging(value)
				Me.SendPropertyChanging
				Me._Code = value
				Me.SendPropertyChanged("Code")
				Me.OnCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WSType", DbType:="NChar(25) NOT NULL", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property WSType() As String
		Get
			Return Me._WSType
		End Get
		Set
			If (String.Equals(Me._WSType, value) = false) Then
				Me.OnWSTypeChanging(value)
				Me.SendPropertyChanging
				Me._WSType = value
				Me.SendPropertyChanged("WSType")
				Me.OnWSTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name", DbType:="NChar(100) NOT NULL", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Name() As String
		Get
			Return Me._Name
		End Get
		Set
			If (String.Equals(Me._Name, value) = false) Then
				Me.OnNameChanging(value)
				Me.SendPropertyChanging
				Me._Name = value
				Me.SendPropertyChanged("Name")
				Me.OnNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CountyCode", DbType:="NChar(15) NOT NULL", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property CountyCode() As String
		Get
			Return Me._CountyCode
		End Get
		Set
			If (String.Equals(Me._CountyCode, value) = false) Then
				Me.OnCountyCodeChanging(value)
				Me.SendPropertyChanging
				Me._CountyCode = value
				Me.SendPropertyChanged("CountyCode")
				Me.OnCountyCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StateAbrev", DbType:="NChar(2) NOT NULL", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property StateAbrev() As String
		Get
			Return Me._StateAbrev
		End Get
		Set
			If (String.Equals(Me._StateAbrev, value) = false) Then
				Me.OnStateAbrevChanging(value)
				Me.SendPropertyChanging
				Me._StateAbrev = value
				Me.SendPropertyChanged("StateAbrev")
				Me.OnStateAbrevChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DStatus", DbType:="Int", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property DStatus() As System.Nullable(Of Integer)
		Get
			Return Me._DStatus
		End Get
		Set
			If (Me._DStatus.Equals(value) = false) Then
				Me.OnDStatusChanging(value)
				Me.SendPropertyChanging
				Me._DStatus = value
				Me.SendPropertyChanged("DStatus")
				Me.OnDStatusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SysTime", AutoSync:=AutoSync.Always, DbType:="rowversion", IsDbGenerated:=true, IsVersion:=true, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property SysTime() As System.Data.Linq.Binary
		Get
			Return Me._SysTime
		End Get
		Set
			If (Object.Equals(Me._SysTime, value) = false) Then
				Me.OnSysTimeChanging(value)
				Me.SendPropertyChanging
				Me._SysTime = value
				Me.SendPropertyChanged("SysTime")
				Me.OnSysTimeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_windName", DbType:="NChar(25)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property windName() As String
		Get
			Return Me._windName
		End Get
		Set
			If (String.Equals(Me._windName, value) = false) Then
				Me.OnwindNameChanging(value)
				Me.SendPropertyChanging
				Me._windName = value
				Me.SendPropertyChanged("windName")
				Me.OnwindNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_wp1Name", DbType:="NChar(25)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property wp1Name() As String
		Get
			Return Me._wp1Name
		End Get
		Set
			If (String.Equals(Me._wp1Name, value) = false) Then
				Me.Onwp1NameChanging(value)
				Me.SendPropertyChanging
				Me._wp1Name = value
				Me.SendPropertyChanged("wp1Name")
				Me.Onwp1NameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_initialYear", DbType:="SmallInt", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property initialYear() As System.Nullable(Of Short)
		Get
			Return Me._initialYear
		End Get
		Set
			If (Me._initialYear.Equals(value) = false) Then
				Me.OninitialYearChanging(value)
				Me.SendPropertyChanging
				Me._initialYear = value
				Me.SendPropertyChanged("initialYear")
				Me.OninitialYearChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_finalYear", DbType:="SmallInt", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property finalYear() As System.Nullable(Of Short)
		Get
			Return Me._finalYear
		End Get
		Set
			If (Me._finalYear.Equals(value) = false) Then
				Me.OnfinalYearChanging(value)
				Me.SendPropertyChanging
				Me._finalYear = value
				Me.SendPropertyChanged("finalYear")
				Me.OnfinalYearChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.SSArea")>  _
Partial Public Class SSArea
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _SSAreaID As Integer
	
	Private _Code As String
	
	Private _Name As String
	
	Private _CountyCode As String
	
	Private _DStatus As System.Nullable(Of Integer)
	
	Private _SysTime As System.Data.Linq.Binary
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnSSAreaIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnSSAreaIDChanged()
    End Sub
    Partial Private Sub OnCodeChanging(value As String)
    End Sub
    Partial Private Sub OnCodeChanged()
    End Sub
    Partial Private Sub OnNameChanging(value As String)
    End Sub
    Partial Private Sub OnNameChanged()
    End Sub
    Partial Private Sub OnCountyCodeChanging(value As String)
    End Sub
    Partial Private Sub OnCountyCodeChanged()
    End Sub
    Partial Private Sub OnDStatusChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDStatusChanged()
    End Sub
    Partial Private Sub OnSysTimeChanging(value As System.Data.Linq.Binary)
    End Sub
    Partial Private Sub OnSysTimeChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SSAreaID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property SSAreaID() As Integer
		Get
			Return Me._SSAreaID
		End Get
		Set
			If ((Me._SSAreaID = value)  _
						= false) Then
				Me.OnSSAreaIDChanging(value)
				Me.SendPropertyChanging
				Me._SSAreaID = value
				Me.SendPropertyChanged("SSAreaID")
				Me.OnSSAreaIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Code", DbType:="NChar(5) NOT NULL", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Code() As String
		Get
			Return Me._Code
		End Get
		Set
			If (String.Equals(Me._Code, value) = false) Then
				Me.OnCodeChanging(value)
				Me.SendPropertyChanging
				Me._Code = value
				Me.SendPropertyChanged("Code")
				Me.OnCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name", DbType:="NChar(150) NOT NULL", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Name() As String
		Get
			Return Me._Name
		End Get
		Set
			If (String.Equals(Me._Name, value) = false) Then
				Me.OnNameChanging(value)
				Me.SendPropertyChanging
				Me._Name = value
				Me.SendPropertyChanged("Name")
				Me.OnNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CountyCode", DbType:="NChar(15) NOT NULL", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property CountyCode() As String
		Get
			Return Me._CountyCode
		End Get
		Set
			If (String.Equals(Me._CountyCode, value) = false) Then
				Me.OnCountyCodeChanging(value)
				Me.SendPropertyChanging
				Me._CountyCode = value
				Me.SendPropertyChanged("CountyCode")
				Me.OnCountyCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DStatus", DbType:="Int", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property DStatus() As System.Nullable(Of Integer)
		Get
			Return Me._DStatus
		End Get
		Set
			If (Me._DStatus.Equals(value) = false) Then
				Me.OnDStatusChanging(value)
				Me.SendPropertyChanging
				Me._DStatus = value
				Me.SendPropertyChanged("DStatus")
				Me.OnDStatusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SysTime", AutoSync:=AutoSync.Always, DbType:="rowversion", IsDbGenerated:=true, IsVersion:=true, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property SysTime() As System.Data.Linq.Binary
		Get
			Return Me._SysTime
		End Get
		Set
			If (Object.Equals(Me._SysTime, value) = false) Then
				Me.OnSysTimeChanging(value)
				Me.SendPropertyChanging
				Me._SysTime = value
				Me.SendPropertyChanged("SysTime")
				Me.OnSysTimeChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.APEXFert")>  _
Partial Public Class APEXFert
	
	Private _Code As System.Nullable(Of Short)
	
	Private _Name As String
	
	Private _qn As System.Nullable(Of Single)
	
	Private _qp As System.Nullable(Of Single)
	
	Private _yn As System.Nullable(Of Single)
	
	Private _yp As System.Nullable(Of Single)
	
	Private _lbs As System.Nullable(Of Single)
	
	Private _type As System.Nullable(Of Decimal)
	
	Private _DStatus As System.Nullable(Of Integer)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Code", DbType:="SmallInt")>  _
	Public Property Code() As System.Nullable(Of Short)
		Get
			Return Me._Code
		End Get
		Set
			If (Me._Code.Equals(value) = false) Then
				Me._Code = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name", DbType:="NChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Name() As String
		Get
			Return Me._Name
		End Get
		Set
			If (String.Equals(Me._Name, value) = false) Then
				Me._Name = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_qn", DbType:="Real")>  _
	Public Property qn() As System.Nullable(Of Single)
		Get
			Return Me._qn
		End Get
		Set
			If (Me._qn.Equals(value) = false) Then
				Me._qn = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_qp", DbType:="Real")>  _
	Public Property qp() As System.Nullable(Of Single)
		Get
			Return Me._qp
		End Get
		Set
			If (Me._qp.Equals(value) = false) Then
				Me._qp = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_yn", DbType:="Real")>  _
	Public Property yn() As System.Nullable(Of Single)
		Get
			Return Me._yn
		End Get
		Set
			If (Me._yn.Equals(value) = false) Then
				Me._yn = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_yp", DbType:="Real")>  _
	Public Property yp() As System.Nullable(Of Single)
		Get
			Return Me._yp
		End Get
		Set
			If (Me._yp.Equals(value) = false) Then
				Me._yp = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lbs", DbType:="Real")>  _
	Public Property lbs() As System.Nullable(Of Single)
		Get
			Return Me._lbs
		End Get
		Set
			If (Me._lbs.Equals(value) = false) Then
				Me._lbs = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_type", DbType:="Decimal(2,0)")>  _
	Public Property type() As System.Nullable(Of Decimal)
		Get
			Return Me._type
		End Get
		Set
			If (Me._type.Equals(value) = false) Then
				Me._type = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DStatus", DbType:="Int")>  _
	Public Property DStatus() As System.Nullable(Of Integer)
		Get
			Return Me._DStatus
		End Get
		Set
			If (Me._DStatus.Equals(value) = false) Then
				Me._DStatus = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Equipment")>  _
Partial Public Class Equipment
	
	Private _ID As Integer
	
	Private _Name As String
	
	Private _Codes As System.Nullable(Of Integer)
	
	Private _Ownership As System.Nullable(Of Integer)
	
	Private _LeaseRate As System.Nullable(Of Integer)
	
	Private _NewPrice As System.Nullable(Of Double)
	
	Private _NewHours As System.Nullable(Of Integer)
	
	Private _CurrentPrice As System.Nullable(Of Double)
	
	Private _HoursRemaining As System.Nullable(Of Integer)
	
	Private _Width As System.Nullable(Of Double)
	
	Private _Speed As System.Nullable(Of Double)
	
	Private _FieldEfficiency As System.Nullable(Of Double)
	
	Private _HorsePower As System.Nullable(Of Double)
	
	Private _RF1 As System.Nullable(Of Double)
	
	Private _RF2 As System.Nullable(Of Double)
	
	Private _IRLOAN As System.Nullable(Of Double)
	
	Private _LLOAN As System.Nullable(Of Integer)
	
	Private _IREQUITY As System.Nullable(Of Double)
	
	Private _PDEBT As System.Nullable(Of Double)
	
	Private _Year As System.Nullable(Of Integer)
	
	Private _RV1 As System.Nullable(Of Double)
	
	Private _RV2 As System.Nullable(Of Double)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", DbType:="Int NOT NULL")>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me._ID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name", DbType:="NChar(100)")>  _
	Public Property Name() As String
		Get
			Return Me._Name
		End Get
		Set
			If (String.Equals(Me._Name, value) = false) Then
				Me._Name = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Codes", DbType:="Int")>  _
	Public Property Codes() As System.Nullable(Of Integer)
		Get
			Return Me._Codes
		End Get
		Set
			If (Me._Codes.Equals(value) = false) Then
				Me._Codes = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Ownership", DbType:="Int")>  _
	Public Property Ownership() As System.Nullable(Of Integer)
		Get
			Return Me._Ownership
		End Get
		Set
			If (Me._Ownership.Equals(value) = false) Then
				Me._Ownership = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LeaseRate", DbType:="Int")>  _
	Public Property LeaseRate() As System.Nullable(Of Integer)
		Get
			Return Me._LeaseRate
		End Get
		Set
			If (Me._LeaseRate.Equals(value) = false) Then
				Me._LeaseRate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NewPrice", DbType:="Float")>  _
	Public Property NewPrice() As System.Nullable(Of Double)
		Get
			Return Me._NewPrice
		End Get
		Set
			If (Me._NewPrice.Equals(value) = false) Then
				Me._NewPrice = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NewHours", DbType:="Int")>  _
	Public Property NewHours() As System.Nullable(Of Integer)
		Get
			Return Me._NewHours
		End Get
		Set
			If (Me._NewHours.Equals(value) = false) Then
				Me._NewHours = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CurrentPrice", DbType:="Float")>  _
	Public Property CurrentPrice() As System.Nullable(Of Double)
		Get
			Return Me._CurrentPrice
		End Get
		Set
			If (Me._CurrentPrice.Equals(value) = false) Then
				Me._CurrentPrice = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HoursRemaining", DbType:="Int")>  _
	Public Property HoursRemaining() As System.Nullable(Of Integer)
		Get
			Return Me._HoursRemaining
		End Get
		Set
			If (Me._HoursRemaining.Equals(value) = false) Then
				Me._HoursRemaining = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Width", DbType:="Float")>  _
	Public Property Width() As System.Nullable(Of Double)
		Get
			Return Me._Width
		End Get
		Set
			If (Me._Width.Equals(value) = false) Then
				Me._Width = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Speed", DbType:="Float")>  _
	Public Property Speed() As System.Nullable(Of Double)
		Get
			Return Me._Speed
		End Get
		Set
			If (Me._Speed.Equals(value) = false) Then
				Me._Speed = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FieldEfficiency", DbType:="Float")>  _
	Public Property FieldEfficiency() As System.Nullable(Of Double)
		Get
			Return Me._FieldEfficiency
		End Get
		Set
			If (Me._FieldEfficiency.Equals(value) = false) Then
				Me._FieldEfficiency = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HorsePower", DbType:="Float")>  _
	Public Property HorsePower() As System.Nullable(Of Double)
		Get
			Return Me._HorsePower
		End Get
		Set
			If (Me._HorsePower.Equals(value) = false) Then
				Me._HorsePower = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RF1", DbType:="Float")>  _
	Public Property RF1() As System.Nullable(Of Double)
		Get
			Return Me._RF1
		End Get
		Set
			If (Me._RF1.Equals(value) = false) Then
				Me._RF1 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RF2", DbType:="Float")>  _
	Public Property RF2() As System.Nullable(Of Double)
		Get
			Return Me._RF2
		End Get
		Set
			If (Me._RF2.Equals(value) = false) Then
				Me._RF2 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IRLOAN", DbType:="Float")>  _
	Public Property IRLOAN() As System.Nullable(Of Double)
		Get
			Return Me._IRLOAN
		End Get
		Set
			If (Me._IRLOAN.Equals(value) = false) Then
				Me._IRLOAN = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LLOAN", DbType:="Int")>  _
	Public Property LLOAN() As System.Nullable(Of Integer)
		Get
			Return Me._LLOAN
		End Get
		Set
			If (Me._LLOAN.Equals(value) = false) Then
				Me._LLOAN = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IREQUITY", DbType:="Float")>  _
	Public Property IREQUITY() As System.Nullable(Of Double)
		Get
			Return Me._IREQUITY
		End Get
		Set
			If (Me._IREQUITY.Equals(value) = false) Then
				Me._IREQUITY = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PDEBT", DbType:="Float")>  _
	Public Property PDEBT() As System.Nullable(Of Double)
		Get
			Return Me._PDEBT
		End Get
		Set
			If (Me._PDEBT.Equals(value) = false) Then
				Me._PDEBT = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Year", DbType:="Int")>  _
	Public Property Year() As System.Nullable(Of Integer)
		Get
			Return Me._Year
		End Get
		Set
			If (Me._Year.Equals(value) = false) Then
				Me._Year = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RV1", DbType:="Float")>  _
	Public Property RV1() As System.Nullable(Of Double)
		Get
			Return Me._RV1
		End Get
		Set
			If (Me._RV1.Equals(value) = false) Then
				Me._RV1 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RV2", DbType:="Float")>  _
	Public Property RV2() As System.Nullable(Of Double)
		Get
			Return Me._RV2
		End Get
		Set
			If (Me._RV2.Equals(value) = false) Then
				Me._RV2 = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Feeds")>  _
Partial Public Class Feed
	
	Private _ID As Integer
	
	Private _Name As String
	
	Private _Codes As System.Nullable(Of Integer)
	
	Private _SellingPrice As System.Nullable(Of Double)
	
	Private _PurchasePrice As System.Nullable(Of Double)
	
	Private _Concentrate As System.Nullable(Of Integer)
	
	Private _Forage As System.Nullable(Of Integer)
	
	Private _Grain As System.Nullable(Of Integer)
	
	Private _Hay As System.Nullable(Of Integer)
	
	Private _Pasture As System.Nullable(Of Integer)
	
	Private _Silage As System.Nullable(Of Integer)
	
	Private _Suplement As System.Nullable(Of Integer)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", DbType:="Int NOT NULL")>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me._ID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name", DbType:="NChar(100)")>  _
	Public Property Name() As String
		Get
			Return Me._Name
		End Get
		Set
			If (String.Equals(Me._Name, value) = false) Then
				Me._Name = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Codes", DbType:="Int")>  _
	Public Property Codes() As System.Nullable(Of Integer)
		Get
			Return Me._Codes
		End Get
		Set
			If (Me._Codes.Equals(value) = false) Then
				Me._Codes = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SellingPrice", DbType:="Float")>  _
	Public Property SellingPrice() As System.Nullable(Of Double)
		Get
			Return Me._SellingPrice
		End Get
		Set
			If (Me._SellingPrice.Equals(value) = false) Then
				Me._SellingPrice = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PurchasePrice", DbType:="Float")>  _
	Public Property PurchasePrice() As System.Nullable(Of Double)
		Get
			Return Me._PurchasePrice
		End Get
		Set
			If (Me._PurchasePrice.Equals(value) = false) Then
				Me._PurchasePrice = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Concentrate", DbType:="Int")>  _
	Public Property Concentrate() As System.Nullable(Of Integer)
		Get
			Return Me._Concentrate
		End Get
		Set
			If (Me._Concentrate.Equals(value) = false) Then
				Me._Concentrate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Forage", DbType:="Int")>  _
	Public Property Forage() As System.Nullable(Of Integer)
		Get
			Return Me._Forage
		End Get
		Set
			If (Me._Forage.Equals(value) = false) Then
				Me._Forage = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Grain", DbType:="Int")>  _
	Public Property Grain() As System.Nullable(Of Integer)
		Get
			Return Me._Grain
		End Get
		Set
			If (Me._Grain.Equals(value) = false) Then
				Me._Grain = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Hay", DbType:="Int")>  _
	Public Property Hay() As System.Nullable(Of Integer)
		Get
			Return Me._Hay
		End Get
		Set
			If (Me._Hay.Equals(value) = false) Then
				Me._Hay = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Pasture", DbType:="Int")>  _
	Public Property Pasture() As System.Nullable(Of Integer)
		Get
			Return Me._Pasture
		End Get
		Set
			If (Me._Pasture.Equals(value) = false) Then
				Me._Pasture = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Silage", DbType:="Int")>  _
	Public Property Silage() As System.Nullable(Of Integer)
		Get
			Return Me._Silage
		End Get
		Set
			If (Me._Silage.Equals(value) = false) Then
				Me._Silage = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Suplement", DbType:="Int")>  _
	Public Property Suplement() As System.Nullable(Of Integer)
		Get
			Return Me._Suplement
		End Get
		Set
			If (Me._Suplement.Equals(value) = false) Then
				Me._Suplement = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Structures")>  _
Partial Public Class [Structure]
	
	Private _ID As Integer
	
	Private _Name As String
	
	Private _Codes As System.Nullable(Of Integer)
	
	Private _Ownership As System.Nullable(Of Integer)
	
	Private _LeaseRate As System.Nullable(Of Integer)
	
	Private _NewPrice As System.Nullable(Of Double)
	
	Private _NewLife As System.Nullable(Of Integer)
	
	Private _CurrentPrice As System.Nullable(Of Double)
	
	Private _LifeRemaining As System.Nullable(Of Integer)
	
	Private _MaintenanceCoefficient As System.Nullable(Of Double)
	
	Private _LoanInterestRate As System.Nullable(Of Double)
	
	Private _LengthLoan As System.Nullable(Of Integer)
	
	Private _InterestRateEquity As System.Nullable(Of Double)
	
	Private _ProportionDebt As System.Nullable(Of Double)
	
	Private _Year As System.Nullable(Of Integer)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", DbType:="Int NOT NULL")>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me._ID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name", DbType:="NChar(100)")>  _
	Public Property Name() As String
		Get
			Return Me._Name
		End Get
		Set
			If (String.Equals(Me._Name, value) = false) Then
				Me._Name = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Codes", DbType:="Int")>  _
	Public Property Codes() As System.Nullable(Of Integer)
		Get
			Return Me._Codes
		End Get
		Set
			If (Me._Codes.Equals(value) = false) Then
				Me._Codes = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Ownership", DbType:="Int")>  _
	Public Property Ownership() As System.Nullable(Of Integer)
		Get
			Return Me._Ownership
		End Get
		Set
			If (Me._Ownership.Equals(value) = false) Then
				Me._Ownership = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LeaseRate", DbType:="Int")>  _
	Public Property LeaseRate() As System.Nullable(Of Integer)
		Get
			Return Me._LeaseRate
		End Get
		Set
			If (Me._LeaseRate.Equals(value) = false) Then
				Me._LeaseRate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NewPrice", DbType:="Float")>  _
	Public Property NewPrice() As System.Nullable(Of Double)
		Get
			Return Me._NewPrice
		End Get
		Set
			If (Me._NewPrice.Equals(value) = false) Then
				Me._NewPrice = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NewLife", DbType:="Int")>  _
	Public Property NewLife() As System.Nullable(Of Integer)
		Get
			Return Me._NewLife
		End Get
		Set
			If (Me._NewLife.Equals(value) = false) Then
				Me._NewLife = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CurrentPrice", DbType:="Float")>  _
	Public Property CurrentPrice() As System.Nullable(Of Double)
		Get
			Return Me._CurrentPrice
		End Get
		Set
			If (Me._CurrentPrice.Equals(value) = false) Then
				Me._CurrentPrice = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LifeRemaining", DbType:="Int")>  _
	Public Property LifeRemaining() As System.Nullable(Of Integer)
		Get
			Return Me._LifeRemaining
		End Get
		Set
			If (Me._LifeRemaining.Equals(value) = false) Then
				Me._LifeRemaining = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MaintenanceCoefficient", DbType:="Float")>  _
	Public Property MaintenanceCoefficient() As System.Nullable(Of Double)
		Get
			Return Me._MaintenanceCoefficient
		End Get
		Set
			If (Me._MaintenanceCoefficient.Equals(value) = false) Then
				Me._MaintenanceCoefficient = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LoanInterestRate", DbType:="Float")>  _
	Public Property LoanInterestRate() As System.Nullable(Of Double)
		Get
			Return Me._LoanInterestRate
		End Get
		Set
			If (Me._LoanInterestRate.Equals(value) = false) Then
				Me._LoanInterestRate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LengthLoan", DbType:="Int")>  _
	Public Property LengthLoan() As System.Nullable(Of Integer)
		Get
			Return Me._LengthLoan
		End Get
		Set
			If (Me._LengthLoan.Equals(value) = false) Then
				Me._LengthLoan = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InterestRateEquity", DbType:="Float")>  _
	Public Property InterestRateEquity() As System.Nullable(Of Double)
		Get
			Return Me._InterestRateEquity
		End Get
		Set
			If (Me._InterestRateEquity.Equals(value) = false) Then
				Me._InterestRateEquity = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProportionDebt", DbType:="Float")>  _
	Public Property ProportionDebt() As System.Nullable(Of Double)
		Get
			Return Me._ProportionDebt
		End Get
		Set
			If (Me._ProportionDebt.Equals(value) = false) Then
				Me._ProportionDebt = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Year", DbType:="Int")>  _
	Public Property Year() As System.Nullable(Of Integer)
		Get
			Return Me._Year
		End Get
		Set
			If (Me._Year.Equals(value) = false) Then
				Me._Year = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.OtherInput")>  _
Partial Public Class OtherInput
	
	Private _ID As Integer
	
	Private _Name As String
	
	Private _Codes As System.Nullable(Of Integer)
	
	Private _Values As System.Nullable(Of Double)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", DbType:="Int NOT NULL")>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me._ID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name", DbType:="NChar(100)")>  _
	Public Property Name() As String
		Get
			Return Me._Name
		End Get
		Set
			If (String.Equals(Me._Name, value) = false) Then
				Me._Name = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Codes", DbType:="Int")>  _
	Public Property Codes() As System.Nullable(Of Integer)
		Get
			Return Me._Codes
		End Get
		Set
			If (Me._Codes.Equals(value) = false) Then
				Me._Codes = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[Values]", Storage:="_Values", DbType:="Float")>  _
	Public Property Values() As System.Nullable(Of Double)
		Get
			Return Me._Values
		End Get
		Set
			If (Me._Values.Equals(value) = false) Then
				Me._Values = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Crops_Events")>  _
Partial Public Class Crops_Event
	
	Private _APEXCrop As System.Nullable(Of Integer)
	
	Private _CropName As String
	
	Private _TEStateCode As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_APEXCrop", DbType:="Int")>  _
	Public Property APEXCrop() As System.Nullable(Of Integer)
		Get
			Return Me._APEXCrop
		End Get
		Set
			If (Me._APEXCrop.Equals(value) = false) Then
				Me._APEXCrop = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CropName", DbType:="Char(30)")>  _
	Public Property CropName() As String
		Get
			Return Me._CropName
		End Get
		Set
			If (String.Equals(Me._CropName, value) = false) Then
				Me._CropName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TEStateCode", DbType:="NVarChar(50)")>  _
	Public Property TEStateCode() As String
		Get
			Return Me._TEStateCode
		End Get
		Set
			If (String.Equals(Me._TEStateCode, value) = false) Then
				Me._TEStateCode = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.OpTypes")>  _
Partial Public Class OpType
	
	Private _Status As System.Nullable(Of Boolean)
	
	Private _Code As System.Nullable(Of Short)
	
	Private _DNDC_code As System.Nullable(Of Short)
	
	Private _Name As String
	
	Private _EQP As String
	
	Private _Abbrevation As String
	
	Private _SpanishName As String
	
	Private _PortugueseName As String
	
	Private _ConversionUnit As Single
	
	Private _DryManure As Decimal
	
	Private _NO3N As Decimal
	
	Private _PO4P As Decimal
	
	Private _OrgN As Decimal
	
	Private _OrgP As Decimal
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Status", DbType:="Bit")>  _
	Public Property Status() As System.Nullable(Of Boolean)
		Get
			Return Me._Status
		End Get
		Set
			If (Me._Status.Equals(value) = false) Then
				Me._Status = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Code", DbType:="SmallInt")>  _
	Public Property Code() As System.Nullable(Of Short)
		Get
			Return Me._Code
		End Get
		Set
			If (Me._Code.Equals(value) = false) Then
				Me._Code = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DNDC_code", DbType:="SmallInt")>  _
	Public Property DNDC_code() As System.Nullable(Of Short)
		Get
			Return Me._DNDC_code
		End Get
		Set
			If (Me._DNDC_code.Equals(value) = false) Then
				Me._DNDC_code = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name", DbType:="NChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Name() As String
		Get
			Return Me._Name
		End Get
		Set
			If (String.Equals(Me._Name, value) = false) Then
				Me._Name = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EQP", DbType:="NChar(100) NOT NULL", CanBeNull:=false)>  _
	Public Property EQP() As String
		Get
			Return Me._EQP
		End Get
		Set
			If (String.Equals(Me._EQP, value) = false) Then
				Me._EQP = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Abbrevation", DbType:="NChar(4)")>  _
	Public Property Abbrevation() As String
		Get
			Return Me._Abbrevation
		End Get
		Set
			If (String.Equals(Me._Abbrevation, value) = false) Then
				Me._Abbrevation = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SpanishName", DbType:="NChar(50)")>  _
	Public Property SpanishName() As String
		Get
			Return Me._SpanishName
		End Get
		Set
			If (String.Equals(Me._SpanishName, value) = false) Then
				Me._SpanishName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PortugueseName", DbType:="NChar(50)")>  _
	Public Property PortugueseName() As String
		Get
			Return Me._PortugueseName
		End Get
		Set
			If (String.Equals(Me._PortugueseName, value) = false) Then
				Me._PortugueseName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ConversionUnit", DbType:="Real NOT NULL")>  _
	Public Property ConversionUnit() As Single
		Get
			Return Me._ConversionUnit
		End Get
		Set
			If ((Me._ConversionUnit = value)  _
						= false) Then
				Me._ConversionUnit = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DryManure", DbType:="Decimal(5,2) NOT NULL")>  _
	Public Property DryManure() As Decimal
		Get
			Return Me._DryManure
		End Get
		Set
			If ((Me._DryManure = value)  _
						= false) Then
				Me._DryManure = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NO3N", DbType:="Decimal(7,4) NOT NULL")>  _
	Public Property NO3N() As Decimal
		Get
			Return Me._NO3N
		End Get
		Set
			If ((Me._NO3N = value)  _
						= false) Then
				Me._NO3N = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PO4P", DbType:="Decimal(7,4) NOT NULL")>  _
	Public Property PO4P() As Decimal
		Get
			Return Me._PO4P
		End Get
		Set
			If ((Me._PO4P = value)  _
						= false) Then
				Me._PO4P = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OrgN", DbType:="Decimal(7,4) NOT NULL")>  _
	Public Property OrgN() As Decimal
		Get
			Return Me._OrgN
		End Get
		Set
			If ((Me._OrgN = value)  _
						= false) Then
				Me._OrgN = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OrgP", DbType:="Decimal(7,4) NOT NULL")>  _
	Public Property OrgP() As Decimal
		Get
			Return Me._OrgP
		End Get
		Set
			If ((Me._OrgP = value)  _
						= false) Then
				Me._OrgP = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.EventsTypicalExtended")>  _
Partial Public Class EventsTypicalExtended
	
	Private _TEID As System.Nullable(Of Integer)
	
	Private _TEEventCode As String
	
	Private _TEStateCode As String
	
	Private _EVENTID As System.Nullable(Of Short)
	
	Private _MUID As System.Nullable(Of Integer)
	
	Private _MONTH As System.Nullable(Of Short)
	
	Private _DAY As System.Nullable(Of Short)
	
	Private _YEAR As System.Nullable(Of Short)
	
	Private _EVENTTYPE As String
	
	Private _VAR1 As String
	
	Private _VAR2 As String
	
	Private _VAR3 As String
	
	Private _VAR4 As String
	
	Private _VAR5 As String
	
	Private _VAR6 As String
	
	Private _VAR7 As String
	
	Private _VAR8 As String
	
	Private _VAR9 As String
	
	Private _VAR10 As String
	
	Private _VAR11 As String
	
	Private _VAR12 As String
	
	Private _VAR13 As String
	
	Private _VAR14 As String
	
	Private _VAR15 As String
	
	Private _APEXOp As System.Nullable(Of Integer)
	
	Private _APEXCrop As System.Nullable(Of Integer)
	
	Private _APEXFert As System.Nullable(Of Integer)
	
	Private _APEXOpv1 As String
	
	Private _APEXOpv2 As String
	
	Private _APEXOpv5 As String
	
	Private _APEXOpv7 As String
	
	Private _APEXManure As String
	
	Private _CropName As String
	
	Private _OperationName As String
	
	Private _TillCode As System.Nullable(Of Short)
	
	Private _TillName As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TEID", DbType:="Int")>  _
	Public Property TEID() As System.Nullable(Of Integer)
		Get
			Return Me._TEID
		End Get
		Set
			If (Me._TEID.Equals(value) = false) Then
				Me._TEID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TEEventCode", DbType:="NVarChar(50)")>  _
	Public Property TEEventCode() As String
		Get
			Return Me._TEEventCode
		End Get
		Set
			If (String.Equals(Me._TEEventCode, value) = false) Then
				Me._TEEventCode = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TEStateCode", DbType:="NVarChar(50)")>  _
	Public Property TEStateCode() As String
		Get
			Return Me._TEStateCode
		End Get
		Set
			If (String.Equals(Me._TEStateCode, value) = false) Then
				Me._TEStateCode = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EVENTID", DbType:="SmallInt")>  _
	Public Property EVENTID() As System.Nullable(Of Short)
		Get
			Return Me._EVENTID
		End Get
		Set
			If (Me._EVENTID.Equals(value) = false) Then
				Me._EVENTID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MUID", DbType:="Int")>  _
	Public Property MUID() As System.Nullable(Of Integer)
		Get
			Return Me._MUID
		End Get
		Set
			If (Me._MUID.Equals(value) = false) Then
				Me._MUID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MONTH", DbType:="SmallInt")>  _
	Public Property MONTH() As System.Nullable(Of Short)
		Get
			Return Me._MONTH
		End Get
		Set
			If (Me._MONTH.Equals(value) = false) Then
				Me._MONTH = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DAY", DbType:="SmallInt")>  _
	Public Property DAY() As System.Nullable(Of Short)
		Get
			Return Me._DAY
		End Get
		Set
			If (Me._DAY.Equals(value) = false) Then
				Me._DAY = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_YEAR", DbType:="SmallInt")>  _
	Public Property YEAR() As System.Nullable(Of Short)
		Get
			Return Me._YEAR
		End Get
		Set
			If (Me._YEAR.Equals(value) = false) Then
				Me._YEAR = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EVENTTYPE", DbType:="NVarChar(4)")>  _
	Public Property EVENTTYPE() As String
		Get
			Return Me._EVENTTYPE
		End Get
		Set
			If (String.Equals(Me._EVENTTYPE, value) = false) Then
				Me._EVENTTYPE = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VAR1", DbType:="NVarChar(255)")>  _
	Public Property VAR1() As String
		Get
			Return Me._VAR1
		End Get
		Set
			If (String.Equals(Me._VAR1, value) = false) Then
				Me._VAR1 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VAR2", DbType:="NVarChar(255)")>  _
	Public Property VAR2() As String
		Get
			Return Me._VAR2
		End Get
		Set
			If (String.Equals(Me._VAR2, value) = false) Then
				Me._VAR2 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VAR3", DbType:="NVarChar(255)")>  _
	Public Property VAR3() As String
		Get
			Return Me._VAR3
		End Get
		Set
			If (String.Equals(Me._VAR3, value) = false) Then
				Me._VAR3 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VAR4", DbType:="NVarChar(255)")>  _
	Public Property VAR4() As String
		Get
			Return Me._VAR4
		End Get
		Set
			If (String.Equals(Me._VAR4, value) = false) Then
				Me._VAR4 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VAR5", DbType:="NVarChar(255)")>  _
	Public Property VAR5() As String
		Get
			Return Me._VAR5
		End Get
		Set
			If (String.Equals(Me._VAR5, value) = false) Then
				Me._VAR5 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VAR6", DbType:="NVarChar(255)")>  _
	Public Property VAR6() As String
		Get
			Return Me._VAR6
		End Get
		Set
			If (String.Equals(Me._VAR6, value) = false) Then
				Me._VAR6 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VAR7", DbType:="NVarChar(255)")>  _
	Public Property VAR7() As String
		Get
			Return Me._VAR7
		End Get
		Set
			If (String.Equals(Me._VAR7, value) = false) Then
				Me._VAR7 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VAR8", DbType:="NVarChar(255)")>  _
	Public Property VAR8() As String
		Get
			Return Me._VAR8
		End Get
		Set
			If (String.Equals(Me._VAR8, value) = false) Then
				Me._VAR8 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VAR9", DbType:="NVarChar(255)")>  _
	Public Property VAR9() As String
		Get
			Return Me._VAR9
		End Get
		Set
			If (String.Equals(Me._VAR9, value) = false) Then
				Me._VAR9 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VAR10", DbType:="NVarChar(255)")>  _
	Public Property VAR10() As String
		Get
			Return Me._VAR10
		End Get
		Set
			If (String.Equals(Me._VAR10, value) = false) Then
				Me._VAR10 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VAR11", DbType:="NVarChar(255)")>  _
	Public Property VAR11() As String
		Get
			Return Me._VAR11
		End Get
		Set
			If (String.Equals(Me._VAR11, value) = false) Then
				Me._VAR11 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VAR12", DbType:="NVarChar(255)")>  _
	Public Property VAR12() As String
		Get
			Return Me._VAR12
		End Get
		Set
			If (String.Equals(Me._VAR12, value) = false) Then
				Me._VAR12 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VAR13", DbType:="NVarChar(255)")>  _
	Public Property VAR13() As String
		Get
			Return Me._VAR13
		End Get
		Set
			If (String.Equals(Me._VAR13, value) = false) Then
				Me._VAR13 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VAR14", DbType:="NVarChar(255)")>  _
	Public Property VAR14() As String
		Get
			Return Me._VAR14
		End Get
		Set
			If (String.Equals(Me._VAR14, value) = false) Then
				Me._VAR14 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VAR15", DbType:="NVarChar(255)")>  _
	Public Property VAR15() As String
		Get
			Return Me._VAR15
		End Get
		Set
			If (String.Equals(Me._VAR15, value) = false) Then
				Me._VAR15 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_APEXOp", DbType:="Int")>  _
	Public Property APEXOp() As System.Nullable(Of Integer)
		Get
			Return Me._APEXOp
		End Get
		Set
			If (Me._APEXOp.Equals(value) = false) Then
				Me._APEXOp = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_APEXCrop", DbType:="Int")>  _
	Public Property APEXCrop() As System.Nullable(Of Integer)
		Get
			Return Me._APEXCrop
		End Get
		Set
			If (Me._APEXCrop.Equals(value) = false) Then
				Me._APEXCrop = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_APEXFert", DbType:="Int")>  _
	Public Property APEXFert() As System.Nullable(Of Integer)
		Get
			Return Me._APEXFert
		End Get
		Set
			If (Me._APEXFert.Equals(value) = false) Then
				Me._APEXFert = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_APEXOpv1", DbType:="NVarChar(50)")>  _
	Public Property APEXOpv1() As String
		Get
			Return Me._APEXOpv1
		End Get
		Set
			If (String.Equals(Me._APEXOpv1, value) = false) Then
				Me._APEXOpv1 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_APEXOpv2", DbType:="NVarChar(50)")>  _
	Public Property APEXOpv2() As String
		Get
			Return Me._APEXOpv2
		End Get
		Set
			If (String.Equals(Me._APEXOpv2, value) = false) Then
				Me._APEXOpv2 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_APEXOpv5", DbType:="NVarChar(50)")>  _
	Public Property APEXOpv5() As String
		Get
			Return Me._APEXOpv5
		End Get
		Set
			If (String.Equals(Me._APEXOpv5, value) = false) Then
				Me._APEXOpv5 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_APEXOpv7", DbType:="NVarChar(50)")>  _
	Public Property APEXOpv7() As String
		Get
			Return Me._APEXOpv7
		End Get
		Set
			If (String.Equals(Me._APEXOpv7, value) = false) Then
				Me._APEXOpv7 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_APEXManure", DbType:="NVarChar(50)")>  _
	Public Property APEXManure() As String
		Get
			Return Me._APEXManure
		End Get
		Set
			If (String.Equals(Me._APEXManure, value) = false) Then
				Me._APEXManure = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CropName", DbType:="Char(30)")>  _
	Public Property CropName() As String
		Get
			Return Me._CropName
		End Get
		Set
			If (String.Equals(Me._CropName, value) = false) Then
				Me._CropName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OperationName", DbType:="NChar(20)")>  _
	Public Property OperationName() As String
		Get
			Return Me._OperationName
		End Get
		Set
			If (String.Equals(Me._OperationName, value) = false) Then
				Me._OperationName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TillCode", DbType:="SmallInt")>  _
	Public Property TillCode() As System.Nullable(Of Short)
		Get
			Return Me._TillCode
		End Get
		Set
			If (Me._TillCode.Equals(value) = false) Then
				Me._TillCode = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TillName", DbType:="NChar(100) NOT NULL", CanBeNull:=false)>  _
	Public Property TillName() As String
		Get
			Return Me._TillName
		End Get
		Set
			If (String.Equals(Me._TillName, value) = false) Then
				Me._TillName = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.CropMatrixTypical")>  _
Partial Public Class CropMatrixTypical
	
	Private _CropMatrixID As Integer
	
	Private _CMCode As String
	
	Private _CMCrop As String
	
	Private _CMWater As String
	
	Private _CMFertilizer As String
	
	Private _CMTillage As String
	
	Private _CMVar12 As String
	
	Private _CMRotationYears As Integer
	
	Private _StateAbrev As String
	
	Private _Grazing As System.Nullable(Of Boolean)
	
	Private _DStatus As System.Nullable(Of Integer)
	
	Private _SysTime As System.Data.Linq.Binary
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CropMatrixID", AutoSync:=AutoSync.Always, DbType:="Int NOT NULL IDENTITY", IsDbGenerated:=true, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property CropMatrixID() As Integer
		Get
			Return Me._CropMatrixID
		End Get
		Set
			If ((Me._CropMatrixID = value)  _
						= false) Then
				Me._CropMatrixID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CMCode", DbType:="NChar(50) NOT NULL", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property CMCode() As String
		Get
			Return Me._CMCode
		End Get
		Set
			If (String.Equals(Me._CMCode, value) = false) Then
				Me._CMCode = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CMCrop", DbType:="NVarChar(200) NOT NULL", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property CMCrop() As String
		Get
			Return Me._CMCrop
		End Get
		Set
			If (String.Equals(Me._CMCrop, value) = false) Then
				Me._CMCrop = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CMWater", DbType:="NVarChar(100) NOT NULL", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property CMWater() As String
		Get
			Return Me._CMWater
		End Get
		Set
			If (String.Equals(Me._CMWater, value) = false) Then
				Me._CMWater = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CMFertilizer", DbType:="NVarChar(100) NOT NULL", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property CMFertilizer() As String
		Get
			Return Me._CMFertilizer
		End Get
		Set
			If (String.Equals(Me._CMFertilizer, value) = false) Then
				Me._CMFertilizer = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CMTillage", DbType:="NVarChar(100) NOT NULL", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property CMTillage() As String
		Get
			Return Me._CMTillage
		End Get
		Set
			If (String.Equals(Me._CMTillage, value) = false) Then
				Me._CMTillage = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CMVar12", DbType:="NVarChar(100) NOT NULL", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property CMVar12() As String
		Get
			Return Me._CMVar12
		End Get
		Set
			If (String.Equals(Me._CMVar12, value) = false) Then
				Me._CMVar12 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CMRotationYears", DbType:="Int NOT NULL", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property CMRotationYears() As Integer
		Get
			Return Me._CMRotationYears
		End Get
		Set
			If ((Me._CMRotationYears = value)  _
						= false) Then
				Me._CMRotationYears = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StateAbrev", DbType:="NChar(2) NOT NULL", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property StateAbrev() As String
		Get
			Return Me._StateAbrev
		End Get
		Set
			If (String.Equals(Me._StateAbrev, value) = false) Then
				Me._StateAbrev = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Grazing", DbType:="Bit", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Grazing() As System.Nullable(Of Boolean)
		Get
			Return Me._Grazing
		End Get
		Set
			If (Me._Grazing.Equals(value) = false) Then
				Me._Grazing = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DStatus", DbType:="Int", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property DStatus() As System.Nullable(Of Integer)
		Get
			Return Me._DStatus
		End Get
		Set
			If (Me._DStatus.Equals(value) = false) Then
				Me._DStatus = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SysTime", AutoSync:=AutoSync.Always, DbType:="rowversion", IsDbGenerated:=true, IsVersion:=true, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property SysTime() As System.Data.Linq.Binary
		Get
			Return Me._SysTime
		End Get
		Set
			If (Object.Equals(Me._SysTime, value) = false) Then
				Me._SysTime = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.State")>  _
Partial Public Class State
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _StateID As Integer
	
	Private _Name As String
	
	Private _StateAbrev As String
	
	Private _DStatus As System.Nullable(Of Integer)
	
	Private _DStatusSL As System.Nullable(Of Integer)
	
	Private _SysTime As System.Data.Linq.Binary
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnStateIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnStateIDChanged()
    End Sub
    Partial Private Sub OnNameChanging(value As String)
    End Sub
    Partial Private Sub OnNameChanged()
    End Sub
    Partial Private Sub OnStateAbrevChanging(value As String)
    End Sub
    Partial Private Sub OnStateAbrevChanged()
    End Sub
    Partial Private Sub OnDStatusChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDStatusChanged()
    End Sub
    Partial Private Sub OnDStatusSLChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDStatusSLChanged()
    End Sub
    Partial Private Sub OnSysTimeChanging(value As System.Data.Linq.Binary)
    End Sub
    Partial Private Sub OnSysTimeChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StateID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property StateID() As Integer
		Get
			Return Me._StateID
		End Get
		Set
			If ((Me._StateID = value)  _
						= false) Then
				Me.OnStateIDChanging(value)
				Me.SendPropertyChanging
				Me._StateID = value
				Me.SendPropertyChanged("StateID")
				Me.OnStateIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name", DbType:="NChar(35) NOT NULL", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Name() As String
		Get
			Return Me._Name
		End Get
		Set
			If (String.Equals(Me._Name, value) = false) Then
				Me.OnNameChanging(value)
				Me.SendPropertyChanging
				Me._Name = value
				Me.SendPropertyChanged("Name")
				Me.OnNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StateAbrev", DbType:="NChar(2) NOT NULL", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property StateAbrev() As String
		Get
			Return Me._StateAbrev
		End Get
		Set
			If (String.Equals(Me._StateAbrev, value) = false) Then
				Me.OnStateAbrevChanging(value)
				Me.SendPropertyChanging
				Me._StateAbrev = value
				Me.SendPropertyChanged("StateAbrev")
				Me.OnStateAbrevChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DStatus", DbType:="Int", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property DStatus() As System.Nullable(Of Integer)
		Get
			Return Me._DStatus
		End Get
		Set
			If (Me._DStatus.Equals(value) = false) Then
				Me.OnDStatusChanging(value)
				Me.SendPropertyChanging
				Me._DStatus = value
				Me.SendPropertyChanged("DStatus")
				Me.OnDStatusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DStatusSL", DbType:="Int", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property DStatusSL() As System.Nullable(Of Integer)
		Get
			Return Me._DStatusSL
		End Get
		Set
			If (Me._DStatusSL.Equals(value) = false) Then
				Me.OnDStatusSLChanging(value)
				Me.SendPropertyChanging
				Me._DStatusSL = value
				Me.SendPropertyChanged("DStatusSL")
				Me.OnDStatusSLChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SysTime", AutoSync:=AutoSync.Always, DbType:="rowversion", IsDbGenerated:=true, IsVersion:=true, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property SysTime() As System.Data.Linq.Binary
		Get
			Return Me._SysTime
		End Get
		Set
			If (Object.Equals(Me._SysTime, value) = false) Then
				Me.OnSysTimeChanging(value)
				Me.SendPropertyChanging
				Me._SysTime = value
				Me.SendPropertyChanged("SysTime")
				Me.OnSysTimeChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ParmsDesc")>  _
Partial Public Class ParmsDesc
	
	Private _Code As String
	
	Private _Value As System.Nullable(Of Decimal)
	
	Private _State As String
	
	Private _Name As String
	
	Private _Range1 As System.Nullable(Of Decimal)
	
	Private _Range2 As System.Nullable(Of Decimal)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Code", DbType:="NChar(6)")>  _
	Public Property Code() As String
		Get
			Return Me._Code
		End Get
		Set
			If (String.Equals(Me._Code, value) = false) Then
				Me._Code = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Value", DbType:="Decimal(18,6)")>  _
	Public Property Value() As System.Nullable(Of Decimal)
		Get
			Return Me._Value
		End Get
		Set
			If (Me._Value.Equals(value) = false) Then
				Me._Value = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_State", DbType:="NChar(2)")>  _
	Public Property State() As String
		Get
			Return Me._State
		End Get
		Set
			If (String.Equals(Me._State, value) = false) Then
				Me._State = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name", DbType:="Text", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Name() As String
		Get
			Return Me._Name
		End Get
		Set
			If (String.Equals(Me._Name, value) = false) Then
				Me._Name = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Range1", DbType:="Decimal(18,6)")>  _
	Public Property Range1() As System.Nullable(Of Decimal)
		Get
			Return Me._Range1
		End Get
		Set
			If (Me._Range1.Equals(value) = false) Then
				Me._Range1 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Range2", DbType:="Decimal(18,6)")>  _
	Public Property Range2() As System.Nullable(Of Decimal)
		Get
			Return Me._Range2
		End Get
		Set
			If (Me._Range2.Equals(value) = false) Then
				Me._Range2 = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ControlsDesc")>  _
Partial Public Class ControlsDesc
	
	Private _Code As String
	
	Private _Value As System.Nullable(Of Decimal)
	
	Private _State As String
	
	Private _Name As String
	
	Private _Range1 As System.Nullable(Of Decimal)
	
	Private _Range2 As System.Nullable(Of Decimal)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Code", DbType:="NChar(6)")>  _
	Public Property Code() As String
		Get
			Return Me._Code
		End Get
		Set
			If (String.Equals(Me._Code, value) = false) Then
				Me._Code = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Value", DbType:="Decimal(18,6)")>  _
	Public Property Value() As System.Nullable(Of Decimal)
		Get
			Return Me._Value
		End Get
		Set
			If (Me._Value.Equals(value) = false) Then
				Me._Value = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_State", DbType:="NChar(2)")>  _
	Public Property State() As String
		Get
			Return Me._State
		End Get
		Set
			If (String.Equals(Me._State, value) = false) Then
				Me._State = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name", DbType:="Text", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Name() As String
		Get
			Return Me._Name
		End Get
		Set
			If (String.Equals(Me._Name, value) = false) Then
				Me._Name = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Range1", DbType:="Decimal(18,6)")>  _
	Public Property Range1() As System.Nullable(Of Decimal)
		Get
			Return Me._Range1
		End Get
		Set
			If (Me._Range1.Equals(value) = false) Then
				Me._Range1 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Range2", DbType:="Decimal(18,6)")>  _
	Public Property Range2() As System.Nullable(Of Decimal)
		Get
			Return Me._Range2
		End Get
		Set
			If (Me._Range2.Equals(value) = false) Then
				Me._Range2 = value
			End If
		End Set
	End Property
End Class
